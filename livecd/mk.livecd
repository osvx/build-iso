#!/bin/bash

set -e
shopt -s extglob
shopt -s nullglob

if [ -r ./mk.livecd.conf ] && [ -r ./mk.livecd.functions ]; then
    source ./mk.livecd.conf
    source ./mk.livecd.functions
else
    echo E: Missing mk.livecd.conf or mk.livecd.functions
    exit 1
fi

echo I: cleaning earlier build
trap "clean_mounts; exit 0" EXIT
clean_mounts
rm -rf binary binary.iso chroot config .build binary.hybrid.iso.zsync.xz
# remove cached Packages/Release files from previous run
# (cache only valid within the same run)
rm -rf cache/indices_bootstrap

echo I: configuring build
set_up_lh_config

# set up version template
if eval "$VYATTA_COMMUNITY_BUILD"; then
  # community build
  cp -f templates/community/version .
fi

# set up dev build version string
export VYATTA_DEV_VERSION=$(get_dev_version)

# copy the locally-built packages for installation
# (but only those on one of the lists)
for p in ../pkgs/*.deb; do
  found=false
  pp=${p%%_*}
  pkg=${pp#../pkgs/}
  for l in config/package-lists/*.list.chroot; do
    if egrep -q -e "^$pkg$" $l; then
      found=true
      break
    fi
  done
  if eval "$found"; then
    cp -lf $p config/packages.chroot/
  fi
done

# Copy kernel images if exists
cp -lf ../pkgs/linux-image-*.deb config/packages.chroot
cp -lf ../pkgs/osvx-keyring*.deb config/packages.chroot
#cp -lf ../pkgs/linux-firmware-* config/packages.chroot
cp -lf ../pkgs/linux-image-osvx*.deb config/packages.binary
#cp -lf ../pkgs/linux-firmware-* config/packages.binary

echo I: building bootstrap
if ! lb bootstrap; then
  echo E: bootstrap build failed
  exit 1
fi

# Don't take this seriously
echo "I: It's not like I'm building this specially for you or anything"

# fake out /dev/random to be /dev/urandom for chroot step
(rm -f chroot/dev/random && mknod -m 666 chroot/dev/random c 1 9) || true

echo I: building chroot
if ! lb chroot; then
  echo E: chroot build failed
  exit 1
fi

# restore /dev/random
(rm -f chroot/dev/random && mknod -m 666 chroot/dev/random c 1 8) || true

# remove backup files for ISO
rm -f chroot/etc/*.vyatta-save chroot/etc/*/*.vyatta-save

## Clean up ssh keys.  System should regen keys locally
rm -f chroot/etc/ssh/ssh_host*

## Disable root account
chroot chroot usermod -p ! root

# make version package (twice to get itself into the pkg list)
echo I: making version package
mk_version_package ; mk_version_package

# add config version string to default config file
chroot chroot sh -c \
  '/opt/vyatta/sbin/vyatta_current_conf_ver.pl \
   >> /opt/vyatta/etc/config.boot.default'

rm -rf chroot/root/{.rnd,.gnupg,.aptitude,.debtags}
rm -f chroot/var/log/* || true
rm -f chroot/var/log/apt/* || true

## restore apt/preferences for binary build
#cp -f config/chroot_apt/preferences chroot/etc/apt

# fix for bug 5333. add kernel-img.conf to be included in image.
# note: can't add file during local_includes and local_hooks since it will
# be truncated at the end of chroot stage. we could add the ".old" file
# but that's even uglier.
echo 'do_initrd = Yes' >chroot/etc/kernel-img.conf

echo 'I: creating default grub config'
create_default_grub_config

# build the XenSource partition image
if eval "$create_xensourcevm"; then
  vyatta-xensource-partition-image || exit 1
  exit 0
fi

echo I: building binary
if ! lb binary ; then
  echo E: binary build failed
  exit 1
fi

# new image name (hybrid image)
#mv binary.hybrid.iso binary.iso
mv binary.hybrid.iso osvx-projectx-devel-livecd-"$BUILDID".iso
mv binary.hybrid.iso.zsync.xz osvx-projectx-devel-livecd-"$BUILDID".iso.zsync.xz

echo I: Done

# Local Variables:
# mode: shell-script
# sh-indentation: 4
# End:
